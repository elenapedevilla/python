#Assegnazione di variabili
nome = 'chiara'
num = 23
voto = 23.5

print(nome, type(nome))
print(num,type(num))
print(voto, type(voto))



#Changing types
num = 5
num_str = str(num)

print(num, type(num))
print(num_str, type(num_str))



#Assignment by input()
nome = input('inserire nome: ')
print('Il mio nome è ' + nome)



#Format
print('Il mio nome è {}'.format(nome))
#due modi diversi per fare la stessa cosa

num = int(input('inserire numero: '))
print('la variabile è di tipo {}'.format(num, type(num)))



#Mathematical operations
a = 5
b = 10
print(a, b)

somma = a + b
print(somma)
#scrivere print(somma) e scrivere direttamente nella shell somma è la stessa cosa
print('La somma di {} e {} è {}'.format(a, b, somma))
print('La sottrazione di {} e {} è {}'.format(a,b, sottr))



#String operations
frase1 = 'ciao '
frase2 = 'si '
frase = frase1 + frase2 #così facendo concateno le due stringhe
frase = frase1 * 3 #uscirà ciao ciao ciao

a = 'Supercalifragilisti'
b = 'chespiralidoso'
frase = a + b
print(frase)

frase1 = 'andale'
frase2 = 'ariba'
out = (frase1 * 2) + (frase2 * 2)



#Math module
import math
pigreco = math.pi
print(pigreco)
print(math.pi)
#o stessa cosa
from math import * #con * me li importa tutti
from math import pi #mi importa solo il pi, non gli altri moduli

from math import *
a1 = pi/2 #90° in radianti
a2 = pi #180°
a3 = (3/2)*pi #270°
a4 = 2*pi
sin1 = int(sin(a1))
sin2 = int(sin(a2))
sin3 = int(sin(a3))
sin4 = int(sin(a4))
print(sin1, sin2, sin3, sin4)

cos1 = int(cos(a1))
cos2 = int(cos(a2))
cos3 = int(cos(a3))
cos4 = int(cos(a4))
print(cos1, cos2, cos3, cos4)

#Per convertire un angolo in radianti
from math import *
angolo = 180
ang_rad = radians(angolo) #la funzione è radians
print(ang_rad)

#Per convertire da radianti a °
from math import *
radianti = pi
ang_grad = int(degrees(radianti)) #la funzione è degrees
print(ang_grad)



#Funzioni
#funzione
def stampa(n): #così dichiaro la funzione; stampa è il nome che io dò a questa funzione, potrebbe chiamarsi in qualsiasi altro modo
    return n

#--- main script ---
nome = 'camillo'
print(stampa(nome))

-
def stampa(n):
    return n*2 

#--- main script ---
nome = 'camillo'
print(stampa(nome)) #uscirà camillocamillo

-
#funzione
def pippo(n):
    return n*2

#--- main script ---
nome = 'camillo'
nome1 = 'pinguino'
num = 44

print(pippo(nome), pippo(nome1), pippo(num))
#esce: camillocamillo pinguinopinguino 88

-
#funzione
def somma(a, b):
    # questa funzione deve restituire la somma tra due numeri
    return a + b
#oppure (stessa cosa)
    s = a + b
    return s

#---------
num1 = 10
num2 = 6

x = somma(num1, num2)
print(x)
#a e b sono variabili locali (non possonoe essere richiamate direttamente nel programma; non ci si può accedere da ovunque)
#num1 e num2 sono variabili globali (ci si può accedere ad es. dal shell)

-
def somma(x, y):
    s = x + y
    return s
#--- main ---
primo_num = 3
secondo_num = 2
s = somma(primo_num, secondo_num)
print(somma(primo_num, secondo_num))
#oppure 
print(s)
print('{} + {} = {}'.format(primo_num, secondo_num, s))
          
primo_num = int(input('Inserire primo numero: '))
secondo_num = int(input('Inserire secondo numero: '))


#esercizio area rettangolo
def area_rettangolo(b,h):
    return b*h
b = int(input('Insperire il primo numero: '))
h = int(input('Inserire il secondo numero: '))

x = area_rettangolo(b, h)

print('{} * {} = {}'.format(b, h, x))


#esercizio area cerchio
from math import *

def area_cerchio(r):
    return pi*(r**2)

raggio = int(input('Inserire valore raggio: '))
x = area_cerchio(raggio)
x = round(x, 5) #numero di cifre decimali che voglio dietro la virgola, in questo caso 5

print('{} * {}^2 = {}'.format(pi, raggio, x))

#esercizio secondi totali(h, m, s)
from math import *
def secondi_totali(h, m, s):
    return (h*3600) + (m*60) + s

h=5
m=2
s=23

print(secondi_totali(h, m, s))



#Conditional Execution
def num_max(a, b):
    if a > b:
        return a #restituzione della variabile con il numero maggiore
    elif b > a: #altro if
        return b
    elif a == b: #== confronto; al posto di elif si può anche scrivere else:
        return False
#---main---
num1 = 2
num2 = 3

print(num_max(num1, num2))


#stessa cosa usando l'input
def num_max(a, b):
    if a > b:
        return a #restituzione della variabile con il numero maggiore
    elif b > a: #altro if
        return b
    elif a == b: #== confronto; al posto di elif si può anche scrivere else (in questo caso non si deve scrivere a == b)
        return False
#---main---
num1 = int(input('Inserire num1: '))
num2 = int(input('Inserire num2: '))

print('Il numero maggiore è {}'.format(num_max(num1, num2)))


# Funzione che mi restituisce 'True' se il numero è pari e 'False' se dispari
def par_dis(n):
    if n % 2 == 0:
        return True
    elif n % 2 > 0:
        return False

num1 = int(input('Inserire num1: '))
print('Il numero è pari? {}'.format(par_dis(num1)))


# Funzione se n è compreso tra 0 e 10
def n0_10(n):
    if n>=0 and n<=10:
        return True
    return False #non devo riscrivere elif, basta return

num = 10
print(n0_10(num))


#Funzione tipo
def chetipo(a):
    if type(a) == str:
        return True
    return False
# Nel shell scrivo parola 'banana'; sotto: chetipo(parola); uscirà: True; se srivo chetipo(numero); uscirà: False


# Funzione che valuta se la stringa a è più lunga della stringa b:
ef lunghezza(a, b):
    if len(a) == len(b):
        return None
    elif len(a) > len(b):
        return True
    else:
        return False
    
str1 = 'avocado'
str2 = 'papaya'

print(str1, len(str1), len(str2), lunghezza(str1, str2)



# Iterazione e ricorsione
# Iterazione
def conto_alla_rovescia_iter(n):
    if n == 0:
        print('Fine conto alla rovescia!')
    else:
        print(n)
        # The algoritm invokes itself...
        conto_alla_rovescia_iter(n-1)

conto_alla_rovescia_iter(10)

# Ricorsione
def conto_alla_rovescia_iter(n):
    while n == 0:
        print(n)
        n = n -1 # si può scrivere anche n-=1
    print('Fine conto alla rovescia!')

conto_alla_rovescia_iter(10)
        
# Stessa cosa si può fare anche con 'for', noi utilizzeremoprincipalmente questo

# Esercizio: fattoriale di un numero naturale n
def fatt_iter(n):
    res = 1
    for i in range(1, n+1):
        res *= i #stessa cosa di res = res * i
    return res
    
print(fatt_iter(4))



# Le liste
# Funzione oer contare quante volte compare un valore in una lista
def conta_el(l,n): # parametro: lista, numero
    c = 0 # contatore
    for el in l:
        if el == n:
            c = c +1 # incrementa il contatore
        else:
            pass
        return c
  
lista = [2, 8, 15, -1, 63, 12, 8, 82, 2, 2, 2] # lista di interi
print(conta_el(lista, 2))
